#!/usr/bin/env bash

trap on_exit EXIT
function pacman() {
    echo "Setting up keyring. This could take a while."
    pacman-keyring --init > /dev/null 2>&1 ; pacman-keyring --populate > /dev/null 2>&1 ; sudo pacman -Syu > /dev/null 2>&1
    echo "Keyring setup complete."
    echo "Setting up i3"
    sudo pacman -S xorg-server xorg-xinit i3-gaps lightdm ttf-dejavu git trash-cli axel memcached nm-applet fail2ban zsh xfce4-terminal thunar tor tuned ufw auditd brightnessctl rofi feh firefox irqbalance curl tlp -y > /dev/null 2>&1
    echo "i3 setup complete"
}
function apt(){
    echo "Updating apt cache"
    sudo apt update > /dev/null 2>&1
    echo "Cache updated"
    echo "Installing i3 and tuning system"
    sudo apt install apt-transport-https swapspace curl wget git memlockd unburden-home-dir auditd nocache stacer trash-cli axel libpam-tmpdir bleachbit curl debsums tuned tuned-utils preload tlp irqbalance brightnessctl fail2ban memcached tuned-utils-systemtap zsh ufw xfce4-terminal network-manager-openvpn-gnome network-manager-pptp-gnome macchanger localepurge i3 lightdm xcompmgr feh xfce4-terminal thunar tor apt-transport-tor -y > /dev/null 2>&1 && sudo apt purge localepurge -y > /dev/null 2>&1
    echo "i3 installed"
}
function tor() {
    echo "Torrifying Shell"
    sudo service tor start > /dev/null 2>&1 && echo ". torsocks on" >> ~/.bashrc ; torpass=$(tor --hash-password "my-tor-password") && printf "HashedControlPassword $torpass\nControlPort 9051\n" | sudo tee -a /etc/tor/torrc
}
function pacctl() {
    echo "Setting up services"
    sudo systemctl enable nm-applet ; sudo systemctl restart tor ; sudo systemctl start fail2ban ; sudo systemctl enable irqbalance ; sudo systemctl enable memcached ; sudo tuned-adm profile throughput-performance ; sudo tlp start ; sudo systemctl enable tlp ; sudo service tuned start ; sudo systemctl enable tuned ; sudo ufw enable ; sudo service auditd start && sudo systemctl enable auditd && sudo auditctl -w /etc/passwd -p wa -k user-modify && sudo auditctl -w /boot -p wa -k user-modify && sudo auditctl -w /root -p wa -k user-modify && sudo auditctl -w /etc/ssh -p wa -k user-modify && sudo auditctl -w /etc/security -p wa -k user-modify && sudo auditctl -w /etc/selinux -p wa -k user-modify && sudo auditctl -w /etc/passwd -p wa -k user-modify && sudo auditctl -w /etc/apparmor -p wa -k user-modify && sudo auditctl -l ; sudo sed -i 's/wifi.powersave = \*/wifi.powersave = 2/' /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf ; sudo systemctl enable lightdm
    echo "Services set up."
}
function aptctl(){
    echo "Setting up services"
    sudo systemctl restart tor ; sudo systemctl start fail2ban ; sudo systemctl enable memcached ; sudo systemctl enable irqbalance ; sudo systemctl enable memlockd ; sudo tuned-adm profile throughput-performance ; sudo tlp start ; sudo service tuned start ; sudo ufw enable ; sudo service auditd start && sudo systemctl enable auditd && sudo auditctl -w /etc/passwd -p wa -k user-modify && sudo auditctl -w /boot -p wa -k user-modify && sudo auditctl -w /root -p wa -k user-modify && sudo auditctl -w /etc/ssh -p wa -k user-modify && sudo auditctl -w /etc/security -p wa -k user-modify && sudo auditctl -w /etc/selinux -p wa -k user-modify && sudo auditctl -w /etc/passwd -p wa -k user-modify && sudo auditctl -w /etc/apparmor -p wa -k user-modify && sudo auditctl -l ; sudo sed -i 's/wifi.powersave = \*/wifi.powersave = 2/' /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf ; sudo apt upgrade ; sudo apt autoclean ; sudo apt autoremove -y ; sudo debsums -a -s
    echo "Services set up"
}
function on_exit() {
    if [ -f root ] ; then
        su root -c bash ~/root
    else
        echo "Something went wrong. Root script not located."
    fi
}
function decorate() {
mv ./.config ~/.config/i3/
echo "feh --randomize --bg-fill ~/Pictures/*" >> ~/.profile
echo "rofi.lines: 5
rofi.eh: 2
rofi.padding: 200
rofi.fullscreen: true
rofi.bw: 0
rofi.separator-style: none
rofi.hide-scrollbar: true

!                  'background', 'border', 'separator'
rofi.color-window: argb:c82d303b, #7c8389, #1d1f21
! State:           'bg',     'fg',     'bgalt',  'hlbg',   'hlfg'
rofi.color-normal: argb:031d1f21, #f3f4f5, argb:031d1f21, argb:031d1f21, #9575cd 
rofi.color-urgent: argb:031d1f21, #f3f4f5, argb:bc303541, argb:031d1f21, #9575cd
rofi.color-active: argb:031d1f21, #f3f4f5, argb:031d1f21, argb:031d1f21, #9575cd 
rofi.font: System Nimbus Mono PS Bold Display 10" >> .config/rofi/config
if [ -f .config/rofi/config ] ; then
    echo "Rofi set up"
else
    echo "Something went wrong. Rofi not set up."
fi
}
function root() {
echo "echo high >> /sys/class/drm/card0/device/power_dpm_force_performance_level
echo z3fold >> /etc/initramfs-tools/modules
echo lz4 >> /etc/initramfs-tools/modules
echo lz4_compress >> /etc/initramfs-tools/modules
update-initramfs -u
update-grub
rm ~/root" >> ~/root
}
function cpufreq() {
echo "[Desktop Entry]
Type=Application
Name=Performance
GenericName=Performance
Comment=
Categories=System;
Exec=echo 'Performance' | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor" >> /etc/xdg/autostart/performance.desktop
if [ -f /etc/xdg/autostart/performance.desktop ] ; then
    echo "CPU Frequency set to max."
else
    echo "Something went wrong. CPU Frequency not set"
fi
}
function tmpmail() {
curl -L "https://raw.githubusercontent.com/sdushantha/tmpmail/master/tmpmail" > tmpmail && chmod +x tmpmail && mv tmpmail /local/bin/
if [ -f .local/bin/tmpmail ] ; then
    echo "Tmpmail setup."
else
    echo "Something went wrong. Tmpmail NOT setup."
fi
if [ -f "/etc/apt/sources.list" ] ; then
    sudo apt install jq w3m xclip -y
elif [ -f "/etc/pacman.d" ] ; then
    sudo pacman -S j1 w3m xclip -y
fi
}
function translator() {
wget git.io/trans && chmod -x ./trans && mv trans .local/bin/
if [ -f .local/bin/trans ] ; then
    echo "Translator setup."
else
    echo "Something went wrong. Translator not setup."
fi
}

#################################################################################################################################################

echo "Detecting package manager"
if [ -f "/etc/apt/sources.list" ] ; then
    apt ; tor ; aptctl
elif [ -f "etc/pacman.d" ] ; then
    pacman ; tor ; pacctl
else
    echo "Package manager not yet supported." ; exit 0
fi
echo "Setting up tmpmail" && tmpmail
echo "Setting up translator." && translator
echo "Decorating i3" && decorate
echo "Generating 'root script'" && root
echo "Setting CPU Frequency to maximum" && cpufreq
echo "Install Complete!" && read
